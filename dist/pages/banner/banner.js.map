{"version":3,"file":"pages/banner/banner.js","sources":["webpack:///._src_pages_banner_banner.js","webpack:///./src/pages/banner/banner.js?ab74","webpack:///._src_pages_banner_banner.scss"],"sourcesContent":["import { View, Image, Block, Textarea, Input,Form, Button,  Map } from '@tarojs/components'\nimport React from 'react'\nimport './banner.scss'\nimport Taro from '@tarojs/taro'\nimport { CDN_PATH} from '../../config/appConfig.js'\n\nconst app = Taro.getApp().$app\nclass Banner extends React.Component{\n\n    constructor(){\n      super()\n      this.state = {\n        files : [],\n        url: '',\n        location: {\n          latitude: app.globalData.latitude,\n          longitude: app.globalData.longitude\n        },\n        getLocation: '',\n        CDN_PATH,\n        iconPath: `${CDN_PATH}/Marker3_Activated@3x.png`,\n        markers: [{\n          id: 0,\n          iconPath: `${CDN_PATH}/Marker3_Activated@3x.png`,\n          latitude: 40.040415,\n          longitude: 116.273511,\n          width: 30,\n          height: 30\n        }]\n      }\n    }\n    bindInput(e){\n\n      this.state.url =  e.detail ? e.detail.value : ''\n      console.log(this.state.url, \"=====url 地址\")\n    }\n    goWebView(){\n      Taro.setStorageSync('url',this.state.url)\n      Taro.navigateTo({\n        url: '/pages/webview/index'\n      })\n    }\n    chooseImage(e){\n      var that = this\n      Taro.chooseImage({\n        // 只能上传一张\n        count: that.imgUploadMax,\n        // 可以指定是原图还是压缩图，默认二者都有\n        sizeType: ['original', 'compressed'],\n        // 可以指定来源是相册还是相机，默认二者都有\n        sourceType: ['album', 'camera'],\n        success: function(res) {\n          Taro.showLoading({\n            title: '图片上传中...'\n          })\n          console.log(res,\"图片上传\")\n          res.tempFilePaths.map((filePath,index)=>{\n            console.log(that,this,\"=====\")\n            that.handleImage(filePath,index)\n          })\n        },\n        fail: function(e) {\n          console.log('----upload fail----')\n          console.log(e)\n        },\n        complete: function(res) {\n          Taro.hideLoading()\n        }\n      })\n    }\n\n    deleteImage(e,index) {\n      e.stopPropagation()\n      let arr = this.state.files.splice(index, 1)\n      console.log(this.state.files,\"图片数组\")\n      this.setState({\n        files: this.state.files\n      })\n    }\n    handleImage(filePath, index){\n      let that = this\n      // get file EXT,for .jpg\n      let ext = filePath.match(/\\.[^.]+?$/)[0]\n      let time = new Date().getTime()\n      let rand = parseInt(Math.random() * 100000)\n      let cloudPath = `img_${0}_${time}_${rand}${ext}`\n      console.log(cloudPath)\n      Taro.cloud.uploadFile({\n        cloudPath: cloudPath,\n        filePath: filePath,\n        success: function(res) {\n          // 图片上传成功\n          console.log(res.fileID,\"图片上传成功11\")\n          let currentFile = that.state.files;\n          currentFile.push(res.fileID)\n          that.setState({\n            // 只能上传一张，每次会覆盖\n            files: currentFile\n          },()=>{\n            console.log(that.state.files,\"当前图片数组\")\n          })\n          // 鉴定敏感图片\n          let contentType = ext.replace(/\\./g, '')\n          console.log(contentType)\n          Taro.cloud\n            .callFunction({\n              name: 'imgSecCheck',\n              data: {\n                env: app.globalData.env,\n                contentType: 'image/png',\n                fileID: res.fileID\n              }\n            })\n            .then(res => {\n              if(index != 0){\n                Taro.showToast({\n                  title: '提示1',\n                  title: '图片上传成功'\n                })\n              }\n            })\n            .catch(err => {\n              // 敏感图片，清空参数值\n              // that.setData({\n              //   fileID: '',\n              //   files: []\n              // })\n              console.log(err,\"图片上传失败\")\n              Taro.showToast({\n                title: '提示',\n                content: '图片上传失败'\n              })\n            })\n        },\n        fail: function(e) {\n          // todo\n          console.log(e)\n        },\n        complete: function() {\n          Taro.hideLoading()\n        }\n      })\n    }\n    bindSubmit(e){\n      let data = e.detail ? e.detail.value : {}\n      data['env'] = app.globalData.env\n      data['isAdd'] = 1\n      data['fileID'] = this.state.files.toString();\n\n      data['latitude'] = this.state.location.latitude\n      data['longitude'] = this.state.location.longitude\n\n      if(!data['fileID']){\n        Taro.showToast({\n          title: '请先上传banner图',\n          icon: 'none'\n        })\n  \n        return\n      }\n      if(!data['url']){\n        Taro.showToast({\n          title: '请输入链接',\n          icon: 'none'\n        })\n  \n        return\n      }\n      Taro.cloud\n      .callFunction({\n        name: 'banner',\n        data: data\n      })\n      .then(res => {\n        console.log(res,\"成功===\")\n        // 隐藏loading\n        Taro.hideLoading()\n        Taro.showToast({\n          title: '发布成功',\n          duration: 5000\n        })\n        // Taro.navigateBack()\n        }).catch(err => {\n          console.log(err,\"对失败\")\n        })\n        \n    }\n     // 点击地图事件\n   onTapMap(event) {\n    this.onChooseLocation();\n  }\n  onChooseLocation(){\n    Taro.chooseLocation({\n      success: res => {\n        console.log(res,\"位置是多少\")\n        this.setState({\n          getLocation: res.address,\n          location:{\n            latitude: res.latitude,\n            longitude: res.longitude\n          }\n        })\n      }\n    })\n  }\n    renderContent(){\n      const {files, location, getLocation } = this.state\n      return (<View className=\"weui-cells weui-cells_after-title\">\n            {/*  上传图片  */}\n            <View className=\"weui-cell weui-cell_input\" style=\"display:flex;flex-wrap: wrap;padding-left: 18px;\" id=\"uploaderFiles\">\n                {files.map((item, index) => {\n                  return (\n                    <Block key={index}>\n                      <View\n                        className=\"weui-uploader__file\"\n                        onClick={this.previewImage}\n                        id={item}\n                      >\n                        <Image\n                          className=\"weui-uploader__img\"\n                          src={item}\n                          mode=\"aspectFill\"\n                        ></Image>\n                        <View className=\"weui-delete-image\" onClick={(e)=>this.deleteImage(e,index)}>\n                            删除\n                        </View>\n                      </View>\n                    </Block>\n                  )\n                })}\n              </View>\n            <View className=\"weui-cell weui-cell_input\">\n              <View className=\"weui-cell__hd\">\n                <View className=\"weui-label\">上传图片</View>\n              </View>\n              <View className=\"weui-uploader__input-box\">\n                <View\n                  className=\"weui-uploader__input\"\n                  onClick={()=>this.chooseImage()}\n                ></View>\n              </View>\n            </View>\n\n            <View className=\"weui-cell weui-cell_input\">\n                <View className=\"weui-cell__hd\">\n                  <View className=\"weui-label\">链接地址</View>\n                </View>\n   \n\n                    <Textarea style=\"height: 100px; padding: 10px\"\n                      name=\"url\"\n                      maxlength=\"500\"\n                      onInput={(e)=>this.bindInput(e)}\n                      className=\"weui-textarea\"\n                      placeholder=\"请输入链接地址\"\n\n                    ></Textarea>\n              </View>\n              <View className=\"weui-cell weui-cell_input\">\n                  <View className=\"weui-cell__hd\">\n                    <View className=\"weui-label\">关联地点</View>\n                  </View>\n                  <View className=\"weui-cell__bd\">\n                    <Input\n                      name=\"getLocation\"\n                      confirmType=\"next\"\n                      maxlength=\"12\"\n                      value={getLocation}\n                      className=\"weui-input\"\n                      placeholder=\"点击地图进入地址选择\"\n                    ></Input>\n                  </View>\n                </View>\n              <View className=\"weui-cell\"  onClick={()=>this.onTapMap()}>\n                  <Map\n                    className=\"map\"\n                    id=\"map\"\n                    latitude={location.latitude}\n                    longitude={location.longitude}\n                    scale=\"16\"\n                    onClick={()=>this.onTapMap()}\n                    enableZoom={true}\n                    enableScroll={false}\n                  >\n                      <Image\n                      className=\"current-site-icon\"\n                      onLoad={this.onLoadImage}\n                      onError={this.onErrorImage}\n                      src={this.state.iconPath}\n                      onClick={()=>this.onTapMap()}\n                    ></Image>\n                  </Map>\n                  </View>\n\n       <Button src='https://mp.weixin.qq.com/' onClick={()=>this.goWebView()} >测试跳转</Button>\n        <Button className=\"weui-btn\" type=\"primary\" formType=\"submit\">\n        确认发布\n      </Button>\n    </View>)\n    }\n    render() {\n      \n      return (\n        <View className=\"page\">\n        <Form onSubmit={(e)=>this.bindSubmit(e)}>\n            {this.renderContent()}\n        </Form>\n      </View>\n    )\n  }\n}\nexport default Banner","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./banner.js\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/banner/banner', {root:{cn:[]}}, config || {}))\n\n","// extracted by mini-css-extract-plugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAVA;AAFA;AAqBA;AACA;;;AAAA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAZA;AAiBA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AAvBA;AAyBA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AACA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AADA;AAIA;AAfA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAxBA;AAjBA;AA+CA;AACA;AACA;AAjDA;AAmDA;AACA;AACA;AArDA;AAuDA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AATA;AAeA;AAfA;AAmBA;AACA;;;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AAVA;AAYA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AADA;AAFA;AADA;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AADA;AAJA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AACA;AAAA;AAHA;AAIA;AACA;AALA;AANA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAJA;AAeA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAOA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAVA;AADA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAxFA;AA4FA;;;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;;;;AA9SA;AACA;AA+SA;;;;;;;;;;;;;ACvTA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;;;;A","sourceRoot":""}